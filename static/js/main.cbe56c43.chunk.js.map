{"version":3,"sources":["component/noteTaking.js","App.js","serviceWorker.js","index.js"],"names":["NoteTaking","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","savedState","localStorage","getItem","savedRequests","state","items","JSON","parse","requests","show","Url","currentNote","currentTitle","currentID","addEditNote","bind","assertThisInitialized","handleClose","handleShow","self","window","addEventListener","event","syncWithApi","navigator","onLine","id","hasOwnProperty","$","ajax","url","type","contentType","data","stringify","success","response","setState","notes","removeItem","idx","currentNotes","currentRequests","isNaN","splice","console","log","setItem","theNote","value","theTitle","newItem","theId","title","note","length","theIndex","keys","concat","result","status","pop","undefined","preventDefault","_this2","react_default","a","createElement","ti","onClick","Modal_default","onHide","Header","closeButton","Title","Body","onSubmit","ref","defaultValue","placeholder","required","className","map","val","Card_default","style","width","Text","split","i","Link","href","initializeEdit","deleteNote","Component","App","noteTaking","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cbe56c43.chunk.js","sourcesContent":["import React,  { Component }  from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport $ from 'jquery';\r\nimport { TiDocumentAdd, TiDocumentDelete, TiEdit } from \"react-icons/ti\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass NoteTaking extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        var savedState = localStorage.getItem(\"state\");\r\n        var savedRequests = localStorage.getItem(\"requests\");\r\n        this.state = {\r\n            items: (!savedState) ? [] : JSON.parse(savedState),\r\n            requests:  (!savedRequests) ? {} : JSON.parse(savedRequests),\r\n            show: false,\r\n        }\r\n\r\n        this.Url = \"https://p1mmduuq11.execute-api.us-east-1.amazonaws.com/dev/notes\"\r\n        this.currentNote = \"\";\r\n        this.currentTitle = \"\";\r\n        this.currentID = \"\";\r\n\r\n        this.addEditNote = this.addEditNote.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        var self = this\r\n        window.addEventListener('online', function(event){  //down to up\r\n          self.syncWithApi()\r\n        })\r\n        if(navigator.onLine){   //browser property\r\n          self.syncWithApi()\r\n        }\r\n    }\r\n\r\n    syncWithApi() {\r\n      var self = this;\r\n      for(var id in this.state.requests){\r\n        if(this.state.requests.hasOwnProperty(id)){\r\n          $.ajax({url: self.Url, type: self.state.requests[id].type, contentType: 'application/json',\r\n          data: self.state.requests[id].type == \"DELETE\" ? id : JSON.stringify(self.state.requests[id].data)})\r\n        }\r\n      }\r\n      $.ajax({url: this.Url, type: \"GET\", success: function(response){\r\n        self.setState({ items: response.notes });\r\n      }})\r\n      localStorage.removeItem(\"requests\")\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n      }\r\n    \r\n      handleShow() {\r\n        this.setState({ show: true });\r\n      }    \r\n\r\n    deleteNote(idx){\r\n      var self = this\r\n      var currentNotes = this.state.items;\r\n      var currentRequests = this.state.requests;\r\n      if(navigator.onLine){\r\n        $.ajax({url: this.Url, type: \"DELETE\", contentType: \"application/json\", data: this.state.items[idx].id, success: function(response){\r\n          self.syncWithApi()\r\n        }})\r\n      }else{\r\n        isNaN(this.state.items[idx].id) ? \r\n            currentRequests[this.state.items[idx].id] = {\"type\": \"DELETE\", \"data\": this.state.items[idx].id}\r\n            : delete currentRequests[this.state.items[idx].id]\r\n      }\r\n      currentNotes.splice(idx, 1);\r\n      this.setState( {items: currentNotes, requests: currentRequests});\r\n      console.log(this.state);\r\n\r\n      localStorage.setItem(\"state\", JSON.stringify(currentNotes));\r\n      \r\n      localStorage.setItem(\"requests\", JSON.stringify(currentRequests));\r\n    }\r\n    \r\n    addEditNote(event){\r\n      var self = this\r\n      console.log(this.theNote.value);\r\n        if(this.theTitle.value !== \"\")\r\n        {\r\n            var newItem = {\r\n                id : this.theId.value,\r\n                title: this.theTitle.value,\r\n                note: this.theNote.value\r\n            };\r\n        }\r\n        var currentNotes = this.state.items;\r\n        var type = \"\";\r\n        // Current Title is available only on edit\r\n        if(this.currentTitle.length > 0) {\r\n          currentNotes.splice(this.theIndex, 1, newItem)\r\n          type = \"PUT\"\r\n         } else{\r\n          newItem.id = Object.keys(this.state.requests).length + 1\r\n           currentNotes = currentNotes.concat(newItem)\r\n           type = \"POST\"\r\n         }\r\n         var currentRequests = this.state.requests;\r\n        if(navigator.onLine){\r\n          $.ajax({url: this.Url, type: type, data: JSON.stringify(newItem), contentType: \"application/json\", success: function(result, status){\r\n            if(status==200 && type == \"POST\"){\r\n              currentNotes.pop();\r\n              newItem.id = result;\r\n              currentNotes = currentNotes.concat(newItem)\r\n              self.syncWithApi()\r\n            }\r\n          }})\r\n        } else {\r\n          type = isNaN(newItem.id) ? \"PUT\" : \"POST\"\r\n            currentRequests[newItem.id] = {\"type\": type, \"data\": newItem}\r\n        }\r\n        this.setState({ items : currentNotes, requests: currentRequests });\r\n        \r\n        this.theTitle.value = \"\";\r\n        this.theId.value = \"\";\r\n        this.theNote.value = \"\";\r\n        this.currentTitle = \"\";\r\n        this.currentNote = \"\";\r\n        this.theIndex = undefined;\r\n        console.log(this.state.items);\r\n        this.handleClose();\r\n\r\n        event.preventDefault();\r\n        localStorage.setItem(\"state\", JSON.stringify(currentNotes));\r\n        localStorage.setItem(\"requests\", JSON.stringify(currentRequests))\r\n\r\n    }\r\n    \r\n    initializeEdit(idx){\r\n      this.theIndex = idx;\r\n      this.currentNote = this.state.items[idx].note;\r\n      this.currentTitle = this.state.items[idx].title;\r\n      this.currentID = this.state.items[idx].id;\r\n      this.handleShow();\r\n    }\r\n\r\n    render() {\r\n    return (\r\n      <div>\r\n        <header><h1>Noteable\r\n        <TiDocumentAdd onClick={this.handleShow} /></h1>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Note</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <form onSubmit={this.addEditNote}>\r\n              <input type=\"hidden\"\r\n              ref={(id) => this.theId=id}\r\n              defaultValue = {this.currentID}\r\n              />\r\n              <input \r\n              type=\"text\" \r\n              placeholder=\"Title\"\r\n              ref={(title) => this.theTitle = title}\r\n              defaultValue = {this.currentTitle}\r\n              required/>\r\n              <textarea \r\n              placeholder=\"Enter text\"\r\n              ref={(note) => this.theNote=note}\r\n              defaultValue = {this.currentNote}\r\n              />\r\n              <button type=\"submit\">Add Note</button>\r\n          </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n            \r\n        </header>\r\n        <div className=\"main-content\">\r\n             {this.state.items.map((val, idx) =>\r\n             <Card style={{ width: '18rem' }}>\r\n              <Card.Body>\r\n                <Card.Title>{val.title}</Card.Title>\r\n                <Card.Text>\r\n                  {val.note.split(\"\\n\").map((i) => {\r\n            return <div>{i}</div>;\r\n        })}\r\n                </Card.Text>\r\n                <Card.Link href=\"#\" ><TiEdit onClick={() => this.initializeEdit(idx)} /></Card.Link>\r\n                <Card.Link href=\"#\"><TiDocumentDelete onClick = {() => this.deleteNote(idx)} /></Card.Link>\r\n              </Card.Body>\r\n            </Card>)\r\n             }\r\n      </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteTaking;\r\n","import React, { Component } from 'react';\nimport NoteTaking from './component/noteTaking';\nimport './component/noteTaking.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"noteable\">\n        <NoteTaking />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}